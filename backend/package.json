{
  "name": "healthscan-backend",
  "version": "1.0.0",
  "description": "HealthScan AI Backend API",
  "main": "dist/index.js",
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "tsc",
    "start": "node dist/index.js",
    "start:prod": "NODE_ENV=production node dist/index.js",
    "test": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:security": "npm audit && tsx src/tests/security.test.ts",
    "lint": "eslint src --ext .ts --fix",
    "lint:check": "eslint src --ext .ts",
    "format": "prettier --write \"src/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\"",
    "type-check": "tsc --noEmit",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "db:migrate": "npx prisma migrate deploy",
    "db:generate": "npx prisma generate",
    "db:reset": "npx prisma migrate reset --force",
    "db:seed": "npx prisma db seed",
    "health:check": "curl -f http://localhost:8080/health || exit 1",
    "docker:build": "docker build -t healthscan-backend .",
    "docker:run": "docker run -p 8080:8080 healthscan-backend",
    "check:ollama": "curl -s http://localhost:11434/api/tags | grep -q meditron && echo '✅ Meditron is installed' || echo '❌ Meditron not found. Run: ollama pull meditron:7b'",
    "test:ai": "tsx src/services/ai/test-meditron.ts",
    "test:huggingface": "tsx src/services/ai/test-huggingface.ts",
    "test:hf-models": "tsx src/services/ai/test-huggingface-models.ts",
    "test:hf-api": "tsx src/services/ai/test-hf-inference-api.ts",
    "test:hf-available": "tsx src/services/ai/test-available-inference-models.ts",
    "test:medical-remote": "tsx src/services/ai/test-medical-models-remote.ts",
    "test:hf-pro": "tsx src/services/ai/test-pro-features.ts",
    "test:openrouter": "tsx src/services/ai/test-openrouter.ts",
    "test:google-ai": "tsx src/services/ai/test-google-ai.ts",
    "check:huggingface": "echo 'Testing Hugging Face configuration...' && tsx src/services/ai/test-huggingface.ts"
  },
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  },
  "dependencies": {
    "@huggingface/inference": "^4.5.3",
    "@prisma/client": "^5.22.0",
    "@types/uuid": "^10.0.0",
    "bcrypt": "^5.1.1",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "isomorphic-dompurify": "^2.26.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-tesseract-ocr": "^2.2.1",
    "ollama": "^0.5.10",
    "pdfjs-dist": "^4.9.155",
    "sharp": "^0.33.5",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/compression": "^1.8.1",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.19.9",
    "@types/supertest": "^6.0.2",
    "@types/validator": "^13.15.2",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-security": "^3.0.1",
    "jest": "^29.7.0",
    "nodemon": "^3.1.4",
    "prettier": "^3.4.2",
    "prisma": "^5.22.0",
    "supertest": "^7.0.0",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  }
}
